{"version":3,"file":"static/js/679.4de0a9b1.chunk.js","mappings":"2NAQMA,EAAkB,SAACC,GAAD,MAA8C,CAClEC,OAAQD,EAAME,KAAKD,SAEhB,SAASE,EAAgBC,GAK5B,OAAOC,EAAAA,EAAAA,IAAQN,EAARM,EAJmB,SAACC,GACYA,EAAxBL,OAAP,IAAkBM,GAAlB,OAA+BD,EAA/B,GACA,OAAOA,EAAML,QAAS,SAACG,GAAD,UAAgBG,KAAoB,SAAC,KAAD,CAAUC,GAAI,gB,gFCbpF,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAA2K,0BAA3K,EAA+M,yBAA/M,EAAgP,uB,mBCYhP,EARoB,SAACF,GACjB,IAAIG,EAAO,YAAcH,EAAMI,GAC/B,OACI,SAAC,KAAD,CAASC,UAAWC,EAASJ,GAAIC,EAAjC,SAAwCH,EAAMO,QCYtD,EAfiB,SAACP,GACd,OAEE,0BACI,gBAAoBK,UAAWC,EAA/B,SAA2CN,EAAMQ,SAAvCR,EAAMI,O,uCCkCpBK,GAAcC,EAAAA,EAAAA,GAAU,IAkBxBC,GAAmBC,EAAAA,EAAAA,GAA2B,CAACC,KAAK,eAAjCD,EAhBL,SAACZ,GACjB,IAAQc,EAAiBd,EAAjBc,aACR,OACI,kBAAMC,SAAUD,EAAhB,WACI,0BACI,SAACE,EAAA,EAAD,CAAOT,KAAM,cAAeU,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,EAAUX,GAC5DY,KAAK,WAAaC,YAAa,0BAE1C,0BACI,6C,8BCnBhB,GAJ0BC,EAAAA,EAAAA,KAAuBxB,EAAAA,EAAAA,KAbzB,SAACL,GACrB,MAAO,CACH8B,YAAa9B,EAAM8B,gBAGA,SAACC,GACxB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAmBD,SAMlC9B,EAAAA,EADoB0B,EDrBH,SAACvB,GAEpB,IAAM6B,EAAkB7B,EAAMwB,YAAYM,QAAQC,KAAI,SAACC,GACnD,OACI,SAAC,EAAD,CAAwB5B,GAAI4B,EAAE5B,GAAIG,KAAMyB,EAAEzB,MAAxByB,EAAE5B,OAGtB6B,EAAmBjC,EAAMwB,YAAYU,SAASH,KAAI,SAACI,GACrD,OACI,SAAC,EAAD,CAAqB/B,GAAI+B,EAAE/B,GAAII,QAAS2B,EAAE3B,SAA3B2B,EAAE/B,OAOzB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKuB,KAEL,gBAAKxB,UAAWC,EAAhB,SACK2B,KAEL,SAACtB,EAAD,CAAkBI,SAXV,SAACY,GACb3B,EAAM0B,YAAYC,EAAMS","sources":["common/hok/AuthRedirect.tsx","webpack://samurai-way/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/dialogItems/DialogItems.tsx","components/dialogs/messages/Messages.tsx","components/dialogs/Dialogs.tsx","components/dialogs/DialogsContainer.ts"],"sourcesContent":["import React, {ComponentType, ReactNode} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../../store/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype MapStateToPropsType = {\n    isAuth:boolean\n}\nconst mapStateToProps = (state: AppStateType):MapStateToPropsType => ({\n    isAuth: state.auth.isAuth\n})\nexport function authRedirect<T>(Component:ComponentType<T>){\n    const RedirectComponent = (props: MapStateToPropsType) => {\n            const {isAuth, ...restProps} = props\n            return props.isAuth ? <Component  {...restProps as T}/> : <Redirect to={'/login'}/>\n    }\n    return connect(mapStateToProps)(RedirectComponent)\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ODBx3\",\"dialogItems\":\"Dialogs_dialogItems__mXcZY\",\"active\":\"Dialogs_active__wd+SJ\",\"dialog\":\"Dialogs_dialog__kKoha\",\"messages\":\"Dialogs_messages__DV45A\",\"message\":\"Dialogs_message__+F7SU\",\"block\":\"Dialogs_block__x+4sI\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport s from \"../Dialogs.module.css\";\nimport {DialogsType} from \"../../../redux/dialogs_reducer/dialogs-reducer\";\n\nconst DialogItems = (props: DialogsType) => {\n    let path = '/dialogs/' + props.id\n    return (\n        <NavLink className={s.block} to={path}>{props.name}</NavLink>\n    )\n}\n\n\nexport default DialogItems;","import s from \"../Dialogs.module.css\";\nimport React from \"react\";\nimport {MessagesType} from \"../../../redux/dialogs_reducer/dialogs-reducer\";\n\n\nconst Messages = (props: MessagesType) => {\n    return (\n\n      <div>\n          <div key={props.id} className={s.message}>{props.message}</div>\n\n      </div>\n\n\n\n\n\n\n    )\n}\nexport default Messages","import React, {ChangeEvent} from 'react'\nimport s from './Dialogs.module.css'\nimport DialogItems from \"./dialogItems/DialogItems\";\nimport Messages from \"./messages/Messages\";\nimport {DialogsPropsType,} from \"./DialogsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Forms,} from \"../../common/Forms/Forms\";\nimport {maxLength, required} from \"../../utils/validators/validator\";\n\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    const dialogsElements = props.dialogsPage.dialogs.map((d) => {\n        return (\n            <DialogItems key={d.id} id={d.id} name={d.name}/>\n        )\n    })\n    const messagesElements = props.dialogsPage.messages.map((m) => {\n        return (\n            <Messages key={m.id} id={m.id} message={m.message}/>\n        )\n    })\n\nconst sendMessage = (value:DialogsFormType)=>{\n        props.sendMessage(value.dialogsForm)\n}\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n            </div>\n            <DialogsReduxForm onSubmit={sendMessage}/>\n        </div>\n    )\n}\n\nexport type DialogsFormType ={\n    dialogsForm:string\n}\n\nconst maxLength50 = maxLength(50)\n\nconst DialogsForm = (props: InjectedFormProps<DialogsFormType>) => {\n    const { handleSubmit } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field name={'dialogsForm'} component={Forms} validate={[required, maxLength50]}\n                       type=\"textarea\"   placeholder={\"enter your message\"}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n\n        </form>\n\n    )\n}\nconst DialogsReduxForm = reduxForm<DialogsFormType>({form:'dialogsForm'})(DialogsForm)\n","\nimport {compose, Dispatch} from \"redux\"\nimport {Dialogs, DialogsFormType} from \"./Dialogs\";\nimport {InitDialogsPageType, SendMessageCreator} from \"../../redux/dialogs_reducer/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../store/redux-store\";\nimport  { ComponentType} from \"react\";\nimport {authRedirect} from \"../../common/hok/AuthRedirect\";\n\n\nexport type  DialogsPropsType = MapStateToPropsType & MapDispatchToReducerType\n\ntype MapStateToPropsType = {\n    dialogsPage: InitDialogsPageType\n}\ntype MapDispatchToReducerType = {\n    sendMessage: (value:string) => void\n}\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToReducerType => {\n    return {\n        sendMessage: (value:string) => {\n            dispatch(SendMessageCreator(value))\n        }\n    }\n}\n\nconst DialogsContainer =  compose<ComponentType>(connect(mapStateToProps, mapDispatchToProps)\n     ,authRedirect\n)(Dialogs)\n\nexport default DialogsContainer"],"names":["mapStateToProps","state","isAuth","auth","authRedirect","Component","connect","props","restProps","to","path","id","className","s","name","message","maxLength50","maxLength","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Forms","validate","required","type","placeholder","compose","dialogsPage","dispatch","sendMessage","value","SendMessageCreator","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsForm"],"sourceRoot":""}